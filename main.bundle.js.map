{"version":3,"sources":["C:/xampp/htdocs/chatbot-dialogflow/src/$_lazy_route_resource lazy","C:/xampp/htdocs/chatbot-dialogflow/src/app/app.component.html","C:/xampp/htdocs/chatbot-dialogflow/src/app/app.component.scss","C:/xampp/htdocs/chatbot-dialogflow/src/app/app.component.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/app.module.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/index.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-form/message-form.component.html","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-form/message-form.component.scss","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-form/message-form.component.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-item/message-item.component.html","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-item/message-item.component.scss","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-item/message-item.component.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-list/message-list.component.html","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-list/message-list.component.scss","C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-list/message-list.component.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/models/index.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/models/message.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/services/dialogflow.service.ts","C:/xampp/htdocs/chatbot-dialogflow/src/app/services/index.ts","C:/xampp/htdocs/chatbot-dialogflow/src/environments/environment.ts","C:/xampp/htdocs/chatbot-dialogflow/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"chathead\\\">\\r\\n  <div class=\\\"chathead-icon\\\">\\r\\n    <img src=\\\"../../../assets/images/chatbots.png\\\" height=\\\"40\\\" width=\\\"70\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"chathead-text\\\">\\r\\n    GKMS: Application\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"chatform\\\">\\r\\n  <message-list [messages]=\\\"messages\\\"></message-list>\\r\\n  <message-form [message]=\\\"message\\\" [messages]=\\\"messages\\\"></message-form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chatform {\\n  width: 600px;\\n  margin: 0 auto;\\n  margin-top: 50px;\\n  background-color: #bce1ff; }\\n\\n.chathead {\\n  width: 600px;\\n  height: 40px;\\n  margin: 0 auto;\\n  background-color: #eeeffe;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: space-evenly;\\n      -ms-flex-pack: space-evenly;\\n          justify-content: space-evenly; }\\n  .chathead .chathead-icon {\\n    width: 20%; }\\n  .chathead .chathead-text {\\n    width: 80%;\\n    font-weight: bold; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Message } from '@app/models';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public message: Message;\r\n  public messages: Message[];\r\n\r\n\r\n  constructor() {\r\n    this.message = new Message('', '/assets/images/user.png');\r\n    this.messages = [\r\n      new Message('Welcome to GKMS Application..!! How can i help You', '/assets/images/eddy.png', new Date(), 'message', true)\r\n    ];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { DialogflowService } from '@app/services';\r\nimport { MessageListComponent, MessageFormComponent, MessageItemComponent } from '@app/components'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MessageListComponent,\r\n    MessageFormComponent,\r\n    MessageItemComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [\r\n    DialogflowService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/app.module.ts","export * from './message-form/message-form.component';\r\nexport * from './message-list/message-list.component';\r\nexport * from './message-item/message-item.component';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/index.ts","module.exports = \"<div class=\\\"chatcontrol\\\">\\r\\n  <input \\r\\n    type=\\\"text\\\"\\r\\n    class=\\\"form-control chatinput\\\"\\r\\n    (keyup.enter)=\\\"sendMessage()\\\" \\r\\n    [(ngModel)]=\\\"message.content\\\"\\r\\n    placeholder=\\\"Type your message ...\\\"\\r\\n  />\\r\\n  <button class=\\\"btn btn-info sendbtn\\\" (click)=\\\"sendMessage()\\\">\\r\\n    <!--<img class=\\\" sending\\\" src=\\\"../../../assets/images/send.jpg\\\"/>-->\\r\\n    <i class=\\\"fa fa-telegram\\\"></i>\\r\\n  </button>\\r\\n  \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-form/message-form.component.html\n// module id = ../../../../../src/app/components/message-form/message-form.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chatcontrol {\\n  float: left;\\n  width: 100%; }\\n  .chatcontrol .chatinput {\\n    width: 90%;\\n    float: left;\\n    border-radius: 0; }\\n  .chatcontrol .sendbtn {\\n    width: 10%;\\n    float: left;\\n    border-radius: 0;\\n    text-transform: uppercase; }\\n  .chatcontrol .sendimg {\\n    width: inherit;\\n    height: inherit;\\n    float: left;\\n    border-radius: 0;\\n    text-transform: uppercase; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-form/message-form.component.scss\n// module id = ../../../../../src/app/components/message-form/message-form.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Message } from '@app/models';\r\nimport { DialogflowService } from '@app/services';\r\n\r\n@Component({\r\n  selector: 'message-form',\r\n  templateUrl: './message-form.component.html',\r\n  styleUrls: ['./message-form.component.scss']\r\n})\r\nexport class MessageFormComponent implements OnInit {\r\n\r\n  @Input('message')\r\n  public message: Message;\r\n\r\n  @Input('messages')\r\n  public messages: Message[];\r\n\r\n  constructor(private dialogFlowService: DialogflowService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public sendMessage(): void {\r\n    this.message.timestamp = new Date();\r\n    this.message.type = 'message';\r\n    this.message.bot = false;\r\n    this.messages.push(this.message);\r\n\r\n    this.dialogFlowService.getResponse(this.message.content).subscribe(res => {\r\n      let image;\r\n      console.log('custom json undefined is : ' + image);\r\n      const payload = res.result.fulfillment.messages[0].payload;\r\n      if (payload !== undefined) {\r\n        image = res.result.fulfillment.messages[0].payload.contentUrl;\r\n      }\r\n      console.log('custom json with url is : ' + image);\r\n      if (image !== undefined) {\r\n        this.messages.push(\r\n          new Message(image, '/assets/images/eddy.png', res.timestamp, 'image', true)\r\n        );\r\n      } else {\r\n        console.log('size : ' + res.result.fulfillment.messages);\r\n        res.result.fulfillment.messages.forEach(element => {\r\n          this.messages.push(\r\n            new Message(element.speech, '/assets/images/eddy.png', res.timestamp, 'message', true)\r\n          );\r\n        });\r\n      }\r\n    });\r\n\r\n    this.message = new Message('', '/assets/images/user.png');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-form/message-form.component.ts","module.exports = \"<li class=\\\"list-group-item\\\">\\r\\n  <img [src]=\\\"message.avatar\\\" class=\\\"avatar\\\"/>  \\r\\n  <div class=\\\"message\\\" [ngClass]=\\\"{'bot': message.bot, 'user': !message.bot}\\\" *ngIf=\\\"message.type == 'image'\\\">\\r\\n    <img [src]=\\\"message.content\\\"/>  \\r\\n  </div>\\r\\n  <div class=\\\"message\\\" [ngClass]=\\\"{'bot': message.bot, 'user': !message.bot}\\\" *ngIf=\\\"message.type == 'message'\\\">\\r\\n    {{message.content}}\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"timeform\\\">\\r\\n    <i class=\\\"fa fa-clock-o\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"timestamp\\\">at {{message.timestamp | date : 'dd/MM/yyyy' }}</span>\\r\\n  </div>\\r\\n</li>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-item/message-item.component.html\n// module id = ../../../../../src/app/components/message-item/message-item.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\n  font-size: 1em;\\n  font-style: italic;\\n  font-weight: 400;\\n  padding: 10px 10px 10px 10px; }\\n\\n.bot {\\n  background-color: #2999da !important;\\n  color: white; }\\n\\n.user {\\n  background-color: #9daab1 !important;\\n  color: black; }\\n\\n.timeform {\\n  float: left;\\n  width: 100%; }\\n  .timeform i {\\n    margin-left: 20px; }\\n  .timeform .timestamp {\\n    font-size: 0.6em; }\\n\\n.avatar {\\n  width: 50px;\\n  margin-right: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-item/message-item.component.scss\n// module id = ../../../../../src/app/components/message-item/message-item.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Message } from '@app/models';\r\n\r\n@Component({\r\n  selector: 'message-item',\r\n  templateUrl: './message-item.component.html',\r\n  styleUrls: ['./message-item.component.scss']\r\n})\r\nexport class MessageItemComponent implements OnInit {\r\n\r\n  @Input('message')\r\n  public message: Message;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-item/message-item.component.ts","module.exports = \"<div class=\\\"chatlist\\\" #chatlist>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <message-item *ngFor=\\\"let msg of messages\\\" [message]=\\\"msg\\\"></message-item>\\r\\n  </ul>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-list/message-list.component.html\n// module id = ../../../../../src/app/components/message-list/message-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chatlist {\\n  height: 450px;\\n  overflow-y: scroll; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-list/message-list.component.scss\n// module id = ../../../../../src/app/components/message-list/message-list.component.scss\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit, ViewChild, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { Message } from '@app/models';\r\nimport { MessageItemComponent } from '@app/components/message-item/message-item.component';\r\n\r\n@Component({\r\n  selector: 'message-list',\r\n  templateUrl: './message-list.component.html',\r\n  styleUrls: ['./message-list.component.scss']\r\n})\r\nexport class MessageListComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input('messages')\r\n  public messages: Message[];\r\n\r\n  @ViewChild('chatlist', { read: ElementRef }) chatList: ElementRef;\r\n  @ViewChildren(MessageItemComponent, { read: ElementRef }) chatItems: QueryList<MessageItemComponent>;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit() {\r\n    this.chatItems.changes.subscribe(elements => {\r\n      // console.log('messsage list changed: ' + this.messages.length);\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    try {\r\n      this.chatList.nativeElement.scrollTop = this.chatList.nativeElement.scrollHeight;\r\n    }\r\n    catch (err) {\r\n      console.log('Could not find the \"chatList\" element.');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/components/message-list/message-list.component.ts","export * from './message';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/models/index.ts","export class Message {\r\n  content: string;\r\n  timestamp: Date;\r\n  avatar: string;\r\n  type: string;\r\n  bot: boolean;\r\n\r\n  constructor(content: string, avatar: string, timestamp?: Date, type?: string, bot?: boolean) {\r\n    this.content = content;\r\n    this.timestamp = timestamp;\r\n    this.avatar = avatar;\r\n    this.type = type;\r\n    this.bot = bot;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/models/message.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '@env/environment';\r\n\r\n@Injectable()\r\nexport class DialogflowService {\r\n\r\n  private baseURL = 'https://api.dialogflow.com/v1/query?v=833ffc3cae3846f08e47dee3294f2fc5';\r\n  private token: string = environment.token;\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  public getResponse(query: string) {\r\n    const data = {\r\n      query : query,\r\n      lang: 'en',\r\n      sessionId: '12345'\r\n    };\r\n    return this.http\r\n      .post(`${this.baseURL}`, data, {headers: this.getHeaders()})\r\n      .map(res => {\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  public getHeaders() {\r\n    const headers = new Headers();\r\n    headers.append('Authorization', `Bearer ${this.token}`);\r\n    return headers;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/services/dialogflow.service.ts","export * from './dialogflow.service';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/app/services/index.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.token: '6bfdabf5b3b0422e8f879011806579e0'\r\n\r\nexport const environment = {\r\n  production: false,\r\n  \r\n  token: '3c811bc0daa64edfba19c289f0b2efb4'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/chatbot-dialogflow/src/main.ts"],"sourceRoot":"webpack:///"}